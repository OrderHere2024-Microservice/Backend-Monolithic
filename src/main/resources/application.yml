server:
  port: 8080

spring:
  profiles:
    active: local
  application:
    name: orderhere
  servlet:
    multipart:
      max-file-size: 4MB
      max-request-size: 4MB
      enabled: true
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
  graphql:
    path: /graphql
    graphiql:
      enabled: true
      path: /graphiql
  jackson:
    deserialization:
      fail-on-unknown-properties: false
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      properties:
        max.in.flight.requests.per.connection: 5
        enable.idempotence: true
        delivery.timeout.ms: 120000
        linger.ms: 0
        request.timeout.ms: 30000
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      group-id: orderhere-mono
      properties:
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.json:
            trusted.packages: '*'
            use.type.headers: false


resilience4j:
  retry:
    instances:
      healthCheck:
        maxAttempts: 10
        waitDuration: 100ms
  circuitbreaker:
    instances:
      healthCheck:
        slidingWindowSize: 50
        failureRateThreshold: 80
  ratelimiter:
    instances:
      healthCheck:
        limitForPeriod: 1000
        timeoutDuration: 1s
  bulkhead:
    instances:
      healthCheck:
        maxConcurrentCalls: 500
        maxWaitDuration: 500ms
