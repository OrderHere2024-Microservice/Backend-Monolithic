scalar BigDecimal
scalar Upload
scalar Long

type Query {
    getAllRestaurants: [Restaurant]
    getRestaurantById(restaurantId: Int!): Restaurant

    getAllOrders: [Order]
    getOrderById(orderId: Int!): Order
    getUserOrders: [Order]
}

type Mutation {
    createRestaurant(restaurantCreateDTO: RestaurantInput!): Restaurant
    updateRestaurantById(restaurantId: Int!, restaurantUpdateDTO: RestaurantInput!): Restaurant

    placeOrder(placeOrderDTO: PlaceOrderInput!): Int!
    updateOrderStatus(updateOrderStatusDTO: UpdateOrderStatusInput!): Order!
    deleteOrder(deleteOrderDTO: DeleteOrderInput!): String!
}

type Restaurant {
    restaurantId: Int
    name: String!
    description: String!
    address: String!
    contactNumber: String!
    abn: String!
    ownerName: String
    ownerMobile: String
    ownerAddress: String
    ownerEmail: String!
    ownerCrn: String
    openingHours: [OpeningHour]
}

input RestaurantInput {
    name: String!
    description: String!
    address: String!
    contactNumber: String!
    abn: String!
    ownerName: String
    ownerMobile: String
    ownerAddress: String
    ownerEmail: String!
    ownerCrn: String
    openingHours: [OpeningHourInput]
}

input OpeningHourInput {
    dayOfWeek: String!
    openingTime: String!
    closingTime: String!
}

type OpeningHour {
    id: Int
    dayOfWeek: String!
    openingTime: String!
    closingTime: String!
}

type Order {
    orderId: Int
    restaurantId: Int
    userId: String
    dishes: [OrderDish]
    username: String
    orderStatus: String
    orderType: String
    tableNumber: Int
    pickupTime: String
    address: String
    totalPrice: BigDecimal
    note: String
    updatedTime: String
    phone: String
    numberOfPeople: Int
}

type OrderDish {
    dishId: Int!
    dishName: String!
    dishQuantity: Int!
    dishPrice: BigDecimal!
    isDeleted: Boolean
}

input OrderDishInput {
    dishId: Int!
    dishName: String!
    dishQuantity: Int!
    dishPrice: BigDecimal!
}

input PlaceOrderInput {
    restaurantId: Int!
    tableNumber: Int
    orderType: OrderType!
    orderStatus: OrderStatus!
    discount: BigDecimal
    dishes: [OrderDishInput]!
    totalPrice: BigDecimal!
    note: String
    address: String
    phone: String
    numberOfPeople: Int
    pickupTime: String
}

input UpdateOrderStatusInput {
    orderId: Int!
    orderStatus: OrderStatus!
}

input DeleteOrderInput {
    orderId: Int!
}

enum OrderType {
    dine_in
    delivery
    pickup
}

enum OrderStatus {
    pending
    preparing
    finished
    cancelled
    in_transit
    delivered
    delayed
}